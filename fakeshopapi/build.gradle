plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
//	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
 // jpa & mysql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
// SnakeYAML 라이브러리 추가
	implementation 'org.yaml:snakeyaml:1.29' // 이전 버전 사용
//	implementation 'org.yaml:snakeyaml:2.0' // 버전 업데이트
	
 // jwts
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

//gson - json 메시지를 다루기 위한 라이브러리
    implementation 'com.google.code.gson:gson'

// dto validation (값을 검증 할때)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	
}

tasks.named('test') {
	useJUnitPlatform()
}
